---
# file: tasks/main.yaml

- name: Update Repositories Cache
  ansible.builtin.apt:
    update_cache: true
  when:
    - ansible_os_family == 'Debian'
  tags:
    - vault-inst-package

- name: Dependencies
  ansible.builtin.apt:
    name: "{{ packages | flatten(levels=1) }}"
    state: "present"
    cache_valid_time: 3600
    install_recommends: false
  when:
    - ansible_os_family == 'Debian'
  tags:
    - vault-inst-dependencies

- name: Add Vault Group
  ansible.builtin.group:
    name: "{{ vault_group }}"
    state: "present"
  tags:
    - vault-conf-user

- name: Add Vault User
  ansible.builtin.user:
    name: "{{ vault_user }}"
    group: "{{ vault_group }}"
    state: "present"
    system: true
  tags:
    - vault-conf-user

- name: Download Vault
  ansible.builtin.get_url:
    url: "{{ vault_zip_url }}"
    dest: "{{ vault_inst_dir }}/{{ vault_pkg }}"
    mode: 0644
  tags:
    - vault-inst-package

- name: Clean Vault
  ansible.builtin.file:
    path: "{{ vault_inst_dir }}/vault"
    state: "absent"
  when:
    - vault_force_update | bool
  tags:
    - vault-inst-package

- name: Unarchive Vault
  ansible.builtin.unarchive:
    src: "{{ vault_inst_dir }}/{{ vault_pkg }}"
    dest: "{{ vault_inst_dir }}/"
    remote_src: true
  tags:
    - vault-inst-package

- name: Vault
  ansible.builtin.copy:
    src: "{{ vault_inst_dir }}/vault"
    dest: "{{ vault_bin_dir }}"
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
    force: true
    mode: 0755
    remote_src: true
  tags:
    - vault-inst-package

- name: Check Vault mlock Capability
  ansible.builtin.command: "setcap cap_ipc_lock=+ep {{ vault_bin_dir }}/vault"
  changed_when: false  # read-only task
  ignore_errors: true
  register: vault_mlock_capability
  tags:
    - vault-inst-package

- name: Enable Non Root Mlock Capability
  ansible.builtin.command: "setcap cap_ipc_lock=+ep {{ vault_bin_dir }}/vault"
  when: vault_mlock_capability is failed
  tags:
    - vault-inst-package

- name: Create Directories
  ansible.builtin.file:
    dest: "{{ item }}"
    state: "directory"
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
    mode: 0750
  with_items:
    - "{{ vault_data_dir }}"
    - "{{ vault_config_dir }}"
    - "{{ vault_ssl_dir }}"
  tags:
    - vault-conf

- name: Base Configuration
  ansible.builtin.template:
    src: "{{ item }}.hcl.j2"
    dest: "{{ vault_config_dir }}/{{ item }}.hcl"
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
    mode: 0400
  with_items:
    - "vault_main"
  tags:
    - vault-conf

- name: Copy Certificates And Keys
  ansible.builtin.copy:
    content: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
    mode: 0600
  no_log: true
  loop: "{{ vault_certificates | flatten(levels=1) }}"
  when:
    - vault_certificates is defined
  tags:
    - vault-conf

- name: System.d Script
  ansible.builtin.template:
    src: "vault_systemd.service.j2"
    dest: "/lib/systemd/system/vault.service"
    owner: "root"
    group: "root"
    mode: 0644
  notify:
    - "Restart Vault"
  when:
    - vault_service_mgr == "systemd"
  tags:
    - vault-conf

- name: Flush handlers
  ansible.builtin.meta: flush_handlers
